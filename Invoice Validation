public class Invoice {
    protected String invoiceId;
    protected Customer customer;
    protected double amount;
    protected String dueDate;

    public Invoice(String invoiceId, Customer customer, double amount, String dueDate) {
        if (!isValidInvoiceId(invoiceId)) throw new IllegalArgumentException("Invalid Invoice ID.");
        if (customer == null) throw new IllegalArgumentException("Customer cannot be null.");
        if (amount <= 0) throw new IllegalArgumentException("Amount must be greater than zero.");
        if (!isValidDate(dueDate)) throw new IllegalArgumentException("Invalid due date format.");

        this.invoiceId = invoiceId;
        this.customer = customer;
        this.amount = amount;
        this.dueDate = dueDate;
    }

    private boolean isValidInvoiceId(String id) {
        return id != null && id.matches("INV\\d{4}");
    }

    private boolean isValidDate(String date) {
        return date != null && date.matches("\\d{4}-\\d{2}-\\d{2}"); // YYYY-MM-DD
    }
}
